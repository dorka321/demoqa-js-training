{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-07T18:34:19.113Z",
    "end": "2023-06-07T18:34:19.123Z",
    "duration": 10,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6ee371d1-b241-4462-a345-dfdf61edf254",
      "title": "",
      "fullFile": "C:\\Users\\Dorottya_Pecsi\\Documents\\Practice\\demoqa\\test\\numbers-validator\\isNumberEven.spec.js",
      "file": "\\test\\numbers-validator\\isNumberEven.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "840c0ad9-4c23-4053-8078-41dfc1b9fa19",
          "title": "isNumberEven positive test",
          "fullFile": "C:\\Users\\Dorottya_Pecsi\\Documents\\Practice\\demoqa\\test\\numbers-validator\\isNumberEven.spec.js",
          "file": "\\test\\numbers-validator\\isNumberEven.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"isNumberEven positive test\"",
              "fullTitle": "isNumberEven positive test \"before each\" hook in \"isNumberEven positive test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = new NumbersValidator();",
              "err": {},
              "uuid": "efb6e7da-e44f-4817-b104-ab58059ee05d",
              "parentUUID": "840c0ad9-4c23-4053-8078-41dfc1b9fa19",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"isNumberEven positive test\"",
              "fullTitle": "isNumberEven positive test \"after each\" hook in \"isNumberEven positive test\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validator = null;",
              "err": {},
              "uuid": "d947ab07-157c-4b37-8496-f0cea7b040e7",
              "parentUUID": "840c0ad9-4c23-4053-8078-41dfc1b9fa19",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return true when provided with an even number",
              "fullTitle": "isNumberEven positive test should return true when provided with an even number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "460a2d33-7ae7-405a-91e7-f40a1a934d4f",
              "parentUUID": "840c0ad9-4c23-4053-8078-41dfc1b9fa19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when provided a string",
              "fullTitle": "isNumberEven positive test should throw an error when provided a string",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw('[4] is not of type \"Number\"; it is of type \"string\"');",
              "err": {},
              "uuid": "f1551321-73d6-4e0d-994f-022e58296fbc",
              "parentUUID": "840c0ad9-4c23-4053-8078-41dfc1b9fa19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "460a2d33-7ae7-405a-91e7-f40a1a934d4f",
            "f1551321-73d6-4e0d-994f-022e58296fbc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}